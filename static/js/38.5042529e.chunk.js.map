{"version":3,"file":"static/js/38.5042529e.chunk.js","mappings":"sOA2GA,UAtGkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,MAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA0CN,EAAAA,EAAAA,UAAS,MAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHV,EAASW,GACT,MACF,IAAK,WACHT,EAAYS,GACZ,MACF,QACE,OAEL,EAyBD,OACE,UAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACFC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,QAAS,OACTC,cAAe,SACfC,IAAK,EACLC,SAAU,QACVC,aAAc,OAEhBC,SArCiB,SAAAf,GACnBA,EAAMgB,iBAEHhB,EAAMC,OAAOgB,SAAS1B,MAAMY,MAAMe,MACjClB,EAAMC,OAAOgB,SAAS1B,MAAM4B,UAG9BvB,GAAc,GAGbI,EAAMC,OAAOgB,SAASxB,SAASU,MAAMe,MACpClB,EAAMC,OAAOgB,SAASxB,SAAS0B,UAGjCrB,GAAiB,GAEnBV,GAASgC,EAAAA,EAAAA,IAAM,CAAE7B,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,IACZE,GAAc,GACdE,GAAiB,EAClB,EAGC,WAeE,SAAC,IAAD,CACEuB,MAAM,QACNC,QAAQ,WACRC,KAAK,QACLrB,KAAK,QACLC,MAAOZ,EACPiC,SAAUzB,EACV0B,MAAM,UACNC,KAAK,QACLC,MAAOhC,EACPiC,WAAW,6DACXC,WAAY,CACVV,QAAS,2DAEXW,MAAM,+FACNC,UAAQ,KAGV,SAAC,IAAD,CACEV,MAAM,WACNC,QAAQ,WACRG,MAAM,UACNC,KAAK,QACLH,KAAK,WACLrB,KAAK,WACLyB,MAAO9B,EACPgC,WAAY,CACVV,QAAS,aAEXhB,MAAOV,EACP+B,SAAUzB,EACV6B,WAAW,gDACXG,UAAQ,KAGV,SAAC,IAAD,CAAQT,QAAQ,YAAYC,KAAK,SAAjC,sBAKL,C","sources":["pages/Login.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from '../redux/auth/operations';\nimport { Card, TextField, Button } from '@mui/material';\nimport { useState } from 'react';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState(null);\n  const [passwordError, setPasswordError] = useState(null);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (\n      !event.target.elements.email.value.match(\n        event.target.elements.email.pattern\n      )\n    ) {\n      setEmailError(true);\n    }\n    if (\n      !event.target.elements.password.value.match(\n        event.target.elements.password.pattern\n      )\n    ) {\n      setPasswordError(true);\n    }\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n    setEmailError(false);\n    setPasswordError(false);\n  };\n\n  return (\n    <Card\n      component=\"form\"\n      sx={{\n        py: '35px',\n        px: '30px',\n        mx: 'auto',\n        mb: '30px',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n        maxWidth: '350px',\n        autoComplete: 'off',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        label=\"Email\"\n        variant=\"standard\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        color=\"primary\"\n        size=\"small\"\n        error={emailError}\n        helperText=\"Email must contain only latin letters, numbers, @ and dots\"\n        inputProps={{\n          pattern: '^([0-9a-zA-Zd_.-])+@(([a-zA-Zd-])+.)+([a-zA-Zd]{2,4})+$',\n        }}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"standard\"\n        color=\"primary\"\n        size=\"small\"\n        type=\"password\"\n        name=\"password\"\n        error={passwordError}\n        inputProps={{\n          pattern: '^.{4,10}$',\n        }}\n        value={password}\n        onChange={handleChange}\n        helperText=\"Password must contain from 4 to 10 characters\"\n        required\n      />\n\n      <Button variant=\"contained\" type=\"submit\">\n        Log in\n      </Button>\n    </Card>\n  );\n};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","handleChange","event","target","name","value","component","sx","py","px","mx","mb","display","flexDirection","gap","maxWidth","autoComplete","onSubmit","preventDefault","elements","match","pattern","logIn","label","variant","type","onChange","color","size","error","helperText","inputProps","title","required"],"sourceRoot":""}