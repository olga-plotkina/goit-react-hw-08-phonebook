{"version":3,"file":"static/js/130.56c21cca.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","redux/contacts/selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Card, Button, TextField } from '@mui/material';\nimport { useState } from 'react';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [nameError, setNameError] = useState(null);\n  const [numberError, setNumberError] = useState(null);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (\n      !event.target.elements.name.value.match(\n        event.target.elements.name.pattern\n      )\n    ) {\n      setNameError(true);\n    }\n    if (\n      !event.target.elements.number.value.match(\n        event.target.elements.number.pattern\n      )\n    ) {\n      setNumberError(true);\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Card\n      component=\"form\"\n      sx={{\n        py: '35px',\n        px: '30px',\n        mx: 'auto',\n        mb: '30px',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n        maxWidth: '350px',\n        autoComplete: 'off',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        required\n        error={nameError}\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        variant=\"standard\"\n        color=\"primary\"\n        size=\"small\"\n        inputProps={{\n          pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        }}\n        autoComplete=\"off\"\n        helperText=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      <TextField\n        required\n        error={numberError}\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        variant=\"standard\"\n        color=\"primary\"\n        size=\"small\"\n        onChange={handleChange}\n        inputProps={{\n          pattern:\n            '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n        }}\n        helperText=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        Add contact\n      </Button>\n    </Card>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterString = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterString],\n  (contacts, filterString) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterString.toLowerCase())\n    );\n  }\n);\n","import { TextField } from '@mui/material';\nimport { selectFilterString } from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilterString } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterString);\n  return (\n    <TextField\n      sx={{ width: '400px' }}\n      variant=\"outlined\"\n      color=\"primary\"\n      size=\"small\"\n      label=\"Find contacts by name\"\n      type=\"text\"\n      name=\"name\"\n      value={filter}\n      onChange={event => dispatch(setFilterString(event.target.value.trim()))}\n    />\n  );\n};\n","import { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectVisibleContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { Filter } from 'components/Filter';\nimport List from '@mui/joy/List';\nimport ListItem from '@mui/joy/ListItem';\nimport IconButton from '@mui/joy/IconButton';\nimport Delete from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectVisibleContacts);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  return (\n    <Box marginX=\"auto\" width=\"400px\">\n      <Filter />\n      <List\n        variant=\"standard\"\n        sx={{\n          bgcolor: 'background.body',\n          marginX: 'auto',\n          width: '100%',\n          marginTop: '40px',\n          maxWidth: 400,\n          borderRadius: 'sm',\n          boxShadow: 'sm',\n          '--List-decorator-size': '48px',\n          '--List-item-paddingLeft': '1.5rem',\n          '--List-item-paddingRight': '1rem',\n        }}\n      >\n        {isLoading && !error && <b>Request in progress...</b>}\n        {error && <p>{error}</p>}\n        {contacts.map(contact => (\n          <ListItem\n            key={contact.id}\n            sx={{\n              borderBottom: '1px solid grey',\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            {contact.name}: {contact.number}\n            <IconButton\n              aria-label=\"Delete\"\n              size=\"sm\"\n              color=\"primary\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              <Delete color=\"warning\" />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n};\n","// import { Form } from '../components/App.styled';\nimport { Box, Typography } from '@mui/material';\nimport { ContactForm } from '../components/ContactForm';\nimport { ContactList } from '../components/ContactList/';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box>\n      <Typography\n        component=\"h1\"\n        color=\"primary.light\"\n        variant=\"h2\"\n        textAlign=\"center\"\n        mb=\"20px\"\n      >\n        Phonebook\n      </Typography>\n      <ContactForm />\n      <Typography\n        component=\"h2\"\n        variant=\"h4\"\n        color=\"grey.500\"\n        textAlign=\"center\"\n        mb=\"10px\"\n      >\n        Contacts\n      </Typography>\n      <ContactList />\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","dispatch","useDispatch","useState","name","setName","number","setNumber","nameError","setNameError","numberError","setNumberError","handleChange","event","target","value","Card","component","sx","py","px","mx","mb","display","flexDirection","gap","maxWidth","autoComplete","onSubmit","preventDefault","elements","match","pattern","addContact","TextField","required","error","label","type","onChange","variant","color","size","inputProps","helperText","Button","selectIsLoading","state","contacts","isLoading","selectError","selectFilterString","filter","selectVisibleContacts","createSelector","items","filterString","contact","toLowerCase","includes","Filter","useSelector","width","setFilterString","trim","ContactList","Box","marginX","List","bgcolor","marginTop","borderRadius","boxShadow","map","ListItem","borderBottom","justifyContent","IconButton","onClick","deleteContact","id","Delete","useEffect","fetchContacts","Typography","textAlign"],"sourceRoot":""}