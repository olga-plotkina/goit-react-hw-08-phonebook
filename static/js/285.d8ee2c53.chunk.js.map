{"version":3,"file":"static/js/285.d8ee2c53.chunk.js","mappings":"sOAmGA,UA9FqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MACF,IAAK,QACHN,EAASM,GACT,MACF,IAAK,WACHJ,EAAYI,GACZ,MACF,QACE,OAEL,EAUD,OACE,UAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACFC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,QAAS,OACTC,cAAe,SACfC,IAAK,EACLC,SAAU,QACVC,aAAc,OAEhBC,SAtBiB,SAAAd,GACnBA,EAAMe,iBACNzB,GAAS0B,EAAAA,EAAAA,IAAS,CAAEvB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAGC,WAeE,SAAC,IAAD,CACEmB,MAAM,OACNC,QAAQ,WACRC,MAAM,UACNC,KAAK,QACLC,KAAK,OACL5B,KAAK,OACLS,MAAOT,EACP6B,SAAUvB,EACVwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,SAAC,IAAD,CACER,MAAM,QACNC,QAAQ,WACRC,MAAM,UACNC,KAAK,QACLC,KAAK,QACL5B,KAAK,QACLS,MAAOP,EACP2B,SAAUvB,EACVyB,MAAM,+FACNC,UAAQ,KAGV,SAAC,IAAD,CACER,MAAM,WACNC,QAAQ,WACRG,KAAK,WACL5B,KAAK,WACLS,MAAOL,EACPyB,SAAUvB,EACVoB,MAAM,UACNC,KAAK,QACLI,MAAM,+FACNC,UAAQ,KAGV,SAAC,IAAD,CAAQP,QAAQ,YAAYG,KAAK,SAAjC,wBAKL,C","sources":["pages/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Card, TextField, Button } from '@mui/material';\nimport { useState } from 'react';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Card\n      component=\"form\"\n      sx={{\n        py: '35px',\n        px: '30px',\n        mx: 'auto',\n        mb: '30px',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n        maxWidth: '350px',\n        autoComplete: 'off',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        label=\"Name\"\n        variant=\"standard\"\n        color=\"primary\"\n        size=\"small\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"standard\"\n        color=\"primary\"\n        size=\"small\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"standard\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        color=\"primary\"\n        size=\"small\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button variant=\"contained\" type=\"submit\">\n        Register\n      </Button>\n    </Card>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","event","target","value","component","sx","py","px","mx","mb","display","flexDirection","gap","maxWidth","autoComplete","onSubmit","preventDefault","register","label","variant","color","size","type","onChange","pattern","title","required"],"sourceRoot":""}